"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4041],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return u}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(n),u=r,h=m["".concat(c,".").concat(u)]||m[u]||d[u]||i;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},16240:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return m}});var a=n(83117),r=n(80102),i=(n(67294),n(3905)),o=["components"],s={title:"Accounts",sidebar_label:"Accounts"},c="Accounts",l={unversionedId:"point_chain/users/technical_concepts/accounts",id:"point_chain/users/technical_concepts/accounts",title:"Accounts",description:"This document describes the in-built accounts system of Point Chain.",source:"@site/docs/point_chain/users/technical_concepts/accounts.md",sourceDirName:"point_chain/users/technical_concepts",slug:"/point_chain/users/technical_concepts/accounts",permalink:"/docs/point_chain/users/technical_concepts/accounts",editUrl:"https://github.com/pointnetwork/pointnetwork.github.io/edit/main/website/docs/point_chain/users/technical_concepts/accounts.md",tags:[],version:"current",lastUpdatedBy:"Iury V",lastUpdatedAt:1663588940,formattedLastUpdatedAt:"9/19/2022",frontMatter:{title:"Accounts",sidebar_label:"Accounts"},sidebar:"pnSidebar",previous:{title:"Architecture",permalink:"/docs/point_chain/users/technical_concepts/architecture"},next:{title:"Chain ID",permalink:"/docs/point_chain/users/technical_concepts/chain_id"}},p=[{value:"Pre-requisite Readings",id:"pre-requisite-readings",children:[],level:2},{value:"Point Chain Accounts",id:"point-chain-accounts",children:[],level:2},{value:"Addresses and Public Keys",id:"addresses-and-public-keys",children:[],level:2},{value:"Address formats for clients",id:"address-formats-for-clients",children:[{value:"Address conversion",id:"address-conversion",children:[],level:3},{value:"Key output",id:"key-output",children:[],level:3}],level:2},{value:"Querying an Account",id:"querying-an-account",children:[{value:"Command Line Interface",id:"command-line-interface",children:[],level:3},{value:"Cosmos gRPC and REST",id:"cosmos-grpc-and-rest",children:[],level:3},{value:"JSON-RPC",id:"json-rpc",children:[],level:3}],level:2}],d={toc:p};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"accounts"},"Accounts"),(0,i.kt)("p",null,"This document describes the in-built accounts system of Point Chain."),(0,i.kt)("h2",{id:"pre-requisite-readings"},"Pre-requisite Readings"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.cosmos.network/main/basics/accounts.html"},"Cosmos SDK Accounts")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://ethereum.org/en/whitepaper/#ethereum-accounts"},"Ethereum Accounts"))),(0,i.kt)("h2",{id:"point-chain-accounts"},"Point Chain Accounts"),(0,i.kt)("p",null,"Point Chain defines its own custom ",(0,i.kt)("inlineCode",{parentName:"p"},"Account")," type that uses Ethereum's ECDSA secp256k1 curve for keys. This\nsatisfies the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ethereum/EIPs/issues/84"},"EIP84")," for full ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki"},"BIP44")," paths.\nThe root HD path for Point Chain-based accounts is ",(0,i.kt)("inlineCode",{parentName:"p"},"m/44'/60'/0'/0"),"."),(0,i.kt)("h2",{id:"addresses-and-public-keys"},"Addresses and Public Keys"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/satoshilabs/slips/blob/master/slip-0173.md"},"BIP-0173")," defines a new format for segregated witness output addresses that contains a human-readable part that identifies the Bech32 usage. Point Chain uses the following HRP (human readable prefix) as the base HRP:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Network"),(0,i.kt)("th",{parentName:"tr",align:null},"Mainnet"),(0,i.kt)("th",{parentName:"tr",align:null},"Testnet"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Point Chain"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"xpoint"))))),(0,i.kt)("p",null,"There are 3 main types of HRP for the ",(0,i.kt)("inlineCode",{parentName:"p"},"Addresses"),"/",(0,i.kt)("inlineCode",{parentName:"p"},"PubKeys")," available by default on Point Chain:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Addresses and Keys for ",(0,i.kt)("strong",{parentName:"li"},"accounts"),", which identify users (e.g. the sender of a ",(0,i.kt)("inlineCode",{parentName:"li"},"message"),"). They are derived using the ",(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"eth_secp256k1"))," curve."),(0,i.kt)("li",{parentName:"ul"},"Addresses and Keys for ",(0,i.kt)("strong",{parentName:"li"},"validator operators"),", which identify the operators of validators. They are derived using the ",(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"eth_secp256k1"))," curve."),(0,i.kt)("li",{parentName:"ul"},"Addresses and Keys for ",(0,i.kt)("strong",{parentName:"li"},"consensus nodes"),", which identify the validator nodes participating in consensus. They are derived using the ",(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"ed25519"))," curve.")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null}),(0,i.kt)("th",{parentName:"tr",align:null},"Address bech32 Prefix"),(0,i.kt)("th",{parentName:"tr",align:null},"Pubkey bech32 Prefix"),(0,i.kt)("th",{parentName:"tr",align:null},"Curve"),(0,i.kt)("th",{parentName:"tr",align:null},"Address byte length"),(0,i.kt)("th",{parentName:"tr",align:null},"Pubkey byte length"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Accounts"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"pointpub")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"eth_secp256k1")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"20")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"33")," (compressed)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Validator Operator"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"pointvaloper")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"pointvaloperpub")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"eth_secp256k1")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"20")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"33")," (compressed)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Consensus Nodes"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"pointvalcons")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"pointvalconspub")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"ed25519")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"20")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"32"))))),(0,i.kt)("h2",{id:"address-formats-for-clients"},"Address formats for clients"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"EthAccount")," can be represented in both ",(0,i.kt)("a",{parentName:"p",href:"https://en.bitcoin.it/wiki/Bech32"},"Bech32")," (",(0,i.kt)("inlineCode",{parentName:"p"},"point1..."),") and hex (",(0,i.kt)("inlineCode",{parentName:"p"},"0x..."),") formats for Ethereum's Web3 tooling compatibility."),(0,i.kt)("p",null,"The Bech32 format is the default format for Cosmos-SDK queries and transactions through CLI and REST\nclients. The hex format on the other hand, is the Ethereum ",(0,i.kt)("inlineCode",{parentName:"p"},"common.Address")," representation of a\nCosmos ",(0,i.kt)("inlineCode",{parentName:"p"},"sdk.AccAddress"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Address (Bech32)"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"point1z3t55m0l9h0eupuz3dp5t5cypyv674jj7mz2jw")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Address (",(0,i.kt)("a",{parentName:"strong",href:"https://eips.ethereum.org/EIPS/eip-55"},"EIP55")," Hex)"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"0x91defC7fE5603DFA8CC9B655cF5772459BF10c6f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Compressed Public Key"),": ",(0,i.kt)("inlineCode",{parentName:"li"},'{"@type":"/ethermint.crypto.v1.ethsecp256k1.PubKey","key":"AsV5oddeB+hkByIJo/4lZiVUgXTzNfBPKC73cZ4K1YD2"}'))),(0,i.kt)("h3",{id:"address-conversion"},"Address conversion"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"pointd debug addr <address>")," can be used to convert an address between hex and bech32 formats. For example:"),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Bech32")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pointd debug addr point1z3t55m0l9h0eupuz3dp5t5cypyv674jj7mz2jw\n  Address: [20 87 74 109 255 45 223 158 7 130 139 67 69 211 4 9 25 175 86 82]\n  Address (hex): 14574A6DFF2DDF9E07828B4345D3040919AF5652\n  Bech32 Acc: point1z3t55m0l9h0eupuz3dp5t5cypyv674jj7mz2jw\n  Bech32 Val: pointvaloper1z3t55m0l9h0eupuz3dp5t5cypyv674jjn4d6nn\n")))),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Hex")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pointd debug addr 14574A6DFF2DDF9E07828B4345D3040919AF5652\n  Address: [20 87 74 109 255 45 223 158 7 130 139 67 69 211 4 9 25 175 86 82]\n  Address (hex): 14574A6DFF2DDF9E07828B4345D3040919AF5652\n  Bech32 Acc: point1z3t55m0l9h0eupuz3dp5t5cypyv674jj7mz2jw\n  Bech32 Val: pointvaloper1z3t55m0l9h0eupuz3dp5t5cypyv674jjn4d6nn\n")))),(0,i.kt)("h3",{id:"key-output"},"Key output"),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The Cosmos SDK Keyring output (i.e ",(0,i.kt)("inlineCode",{parentName:"p"},"pointd keys"),") only supports addresses and public keys in Bech32 format."))),(0,i.kt)("p",null,"We can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"keys show")," command of ",(0,i.kt)("inlineCode",{parentName:"p"},"pointd")," with the flag ",(0,i.kt)("inlineCode",{parentName:"p"},"--bech <type> (acc|val|cons)")," to\nobtain the addresses and keys as mentioned above,"),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Account")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'pointd keys show mykey --bech acc\n- name: mykey\n  type: local\n  address: point1z3t55m0l9h0eupuz3dp5t5cypyv674jj7mz2jw\n  pubkey: \'{"@type":"/ethermint.crypto.v1.ethsecp256k1.PubKey","key":"AsV5oddeB+hkByIJo/4lZiVUgXTzNfBPKC73cZ4K1YD2"}\'\n  mnemonic: ""\n')))),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Validator")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'pointd keys show mykey --bech val\n- name: mykey\n  type: local\n  address: pointvaloper1z3t55m0l9h0eupuz3dp5t5cypyv674jjn4d6nn\n  pubkey: \'{"@type":"/ethermint.crypto.v1.ethsecp256k1.PubKey","key":"AsV5oddeB+hkByIJo/4lZiVUgXTzNfBPKC73cZ4K1YD2"}\'\n  mnemonic: ""\n')))),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Consensus")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'pointd keys show mykey --bech cons\n- name: mykey\n  type: local\n  address: pointvalcons1rllqa5d97n6zyjhy6cnscc7zu30zjn3f7wyj2n\n  pubkey: \'{"@type":"/ethermint.crypto.v1.ethsecp256k1.PubKey","key":"A/fVLgIqiLykFQxum96JkSOoTemrXD0tFaFQ1B0cpB2c"}\'\n  mnemonic: ""\n')))),(0,i.kt)("p",null,"::::"),(0,i.kt)("h2",{id:"querying-an-account"},"Querying an Account"),(0,i.kt)("p",null,"You can query an account address using the CLI, gRPC or"),(0,i.kt)("h3",{id:"command-line-interface"},"Command Line Interface"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# NOTE: the --output (-o) flag will define the output format in JSON or YAML (text)\npointd q auth account $(pointd keys show mykey -a) -o text\n|\n  '@type': /ethermint.types.v1.EthAccount\n  base_account:\n    account_number: \"0\"\n    address: point1z3t55m0l9h0eupuz3dp5t5cypyv674jj7mz2jw\n    pub_key:\n      '@type': /ethermint.crypto.v1.ethsecp256k1.PubKey\n      key: AsV5oddeB+hkByIJo/4lZiVUgXTzNfBPKC73cZ4K1YD2\n    sequence: \"1\"\n  code_hash: 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n")),(0,i.kt)("h3",{id:"cosmos-grpc-and-rest"},"Cosmos gRPC and REST"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'# GET /cosmos/auth/v1beta1/accounts/{address}\ncurl -X GET "http://localhost:10337/cosmos/auth/v1beta1/accounts/point14au322k9munkmx5wrchz9q30juf5wjgz2cfqku" -H "accept: application/json"\n')),(0,i.kt)("h3",{id:"json-rpc"},"JSON-RPC"),(0,i.kt)("p",null,"To retrieve the Ethereum hex address using Web3, use the JSON-RPC ",(0,i.kt)("a",{parentName:"p",href:"/docs/point_chain/developers/json-rpc/endpoints#eth-accounts"},(0,i.kt)("inlineCode",{parentName:"a"},"eth_accounts"))," or ",(0,i.kt)("a",{parentName:"p",href:"/docs/point_chain/developers/json-rpc/endpoints#personal-listAccounts"},(0,i.kt)("inlineCode",{parentName:"a"},"personal_listAccounts"))," endpoints:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'# query against a local node\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"eth_accounts","params":[],"id":1}\' -H "Content-Type: application/json" http://localhost:8545\n\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"personal_listAccounts","params":[],"id":1}\' -H "Content-Type: application/json" http://localhost:8545\n')))}m.isMDXComponent=!0}}]);
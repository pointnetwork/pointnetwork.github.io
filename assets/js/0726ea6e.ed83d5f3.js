"use strict";(self.webpackChunkpointnetwork_github_io=self.webpackChunkpointnetwork_github_io||[]).push([[6415],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>c});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),c=i,k=u["".concat(d,".").concat(c)]||u[c]||m[c]||r;return n?a.createElement(k,o(o({ref:t},s),{},{components:n})):a.createElement(k,o({ref:t},s))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6041:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(7462),i=(n(7294),n(3905));const r={title:"Binary",sidebar_label:"Binary"},o="pointd",l={unversionedId:"point_chain/validators/quickstart/binary",id:"point_chain/validators/quickstart/binary",title:"Binary",description:"pointd is the all-in-one command-line interface. It supports wallet management, queries and transaction operations",source:"@site/docs/point_chain/validators/quickstart/binary.md",sourceDirName:"point_chain/validators/quickstart",slug:"/point_chain/validators/quickstart/binary",permalink:"/docs/point_chain/validators/quickstart/binary",draft:!1,editUrl:"https://github.com/pointnetwork/pointnetwork.github.io/edit/main/website/docs/point_chain/validators/quickstart/binary.md",tags:[],version:"current",lastUpdatedBy:"Darren Jensen",lastUpdatedAt:1665224220,formattedLastUpdatedAt:"Oct 8, 2022",frontMatter:{title:"Binary",sidebar_label:"Binary"}},d={},p=[{value:"Pre-requisite Readings",id:"pre-requisite-readings",level:2},{value:"Build and Configuration",id:"build-and-configuration",level:2},{value:"Using <code>pointd</code>",id:"using-pointd",level:3},{value:"Config and data directory",id:"config-and-data-directory",level:3},{value:"Configuring the Node",id:"configuring-the-node",level:3},{value:"Pruning of State",id:"pruning-of-state",level:3},{value:"Client configuration",id:"client-configuration",level:3},{value:"Options",id:"options",level:3},{value:"Command list",id:"command-list",level:2}],s={toc:p};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"pointd"},(0,i.kt)("inlineCode",{parentName:"h1"},"pointd")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"pointd")," is the all-in-one command-line interface. It supports wallet management, queries and transaction operations"),(0,i.kt)("h2",{id:"pre-requisite-readings"},"Pre-requisite Readings"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/point_chain/validators/quickstart/installation"},"Installation"))),(0,i.kt)("h2",{id:"build-and-configuration"},"Build and Configuration"),(0,i.kt)("h3",{id:"using-pointd"},"Using ",(0,i.kt)("inlineCode",{parentName:"h3"},"pointd")),(0,i.kt)("p",null,"After you have obtained the latest ",(0,i.kt)("inlineCode",{parentName:"p"},"pointd")," binary, run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pointd [command]\n")),(0,i.kt)("p",null,"Check the version you are running using"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pointd version\n")),(0,i.kt)("p",null,"There is also a ",(0,i.kt)("inlineCode",{parentName:"p"},"-h"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"--help")," command available"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pointd -h\n")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"You can also enable auto-completion with the ",(0,i.kt)("inlineCode",{parentName:"p"},"pointd completion")," command. For example, at the start of a bash session, run ",(0,i.kt)("inlineCode",{parentName:"p"},". <(pointd completion)"),", and all ",(0,i.kt)("inlineCode",{parentName:"p"},"pointd")," subcommands will be auto-completed.")),(0,i.kt)("h3",{id:"config-and-data-directory"},"Config and data directory"),(0,i.kt)("p",null,"By default, your config and data are stored in the folder located at the ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.pointd")," directory."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},".                                   # ~/.pointd\n  \u251c\u2500\u2500 data/                           # Contains the databases used by the node.\n  \u2514\u2500\u2500 config/\n      \u251c\u2500\u2500 app.toml                   # Application-related configuration file.\n      \u251c\u2500\u2500 config.toml                # Tendermint-related configuration file.\n      \u251c\u2500\u2500 genesis.json               # The genesis file.\n      \u251c\u2500\u2500 node_key.json              # Private key to use for node authentication in the p2p protocol.\n      \u2514\u2500\u2500 priv_validator_key.json    # Private key to use as a validator in the consensus protocol.\n")),(0,i.kt)("p",null,"To specify the ",(0,i.kt)("inlineCode",{parentName:"p"},"pointd")," config and data storage directory; you can update it using the global flag ",(0,i.kt)("inlineCode",{parentName:"p"},"--home <directory>")),(0,i.kt)("h3",{id:"configuring-the-node"},"Configuring the Node"),(0,i.kt)("p",null,"The Cosmos SDK automatically generates two configuration files inside ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.pointd/config"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"config.toml"),": used to configure the Tendermint, learn more on ",(0,i.kt)("a",{parentName:"li",href:"https://docs.tendermint.com/master/nodes/configuration.html"},"Tendermint's documentation"),","),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"app.toml"),": generated by the Cosmos SDK, and used to configure your app, such as state pruning strategies, telemetry, gRPC and REST servers configuration, state sync, JSON-RPC, etc.")),(0,i.kt)("p",null,"Both files are heavily commented, please refer to them directly to tweak your node."),(0,i.kt)("p",null,"One example config to tweak is the ",(0,i.kt)("inlineCode",{parentName:"p"},"minimum-gas-prices")," field inside ",(0,i.kt)("inlineCode",{parentName:"p"},"app.toml"),", which defines the minimum amount the validator node is willing to accept for processing a transaction. It is an anti spam mechanism and it will reject incoming transactions with less than the minimum gas prices."),(0,i.kt)("p",null,"If it's empty, make sure to edit the field with some value, for example ",(0,i.kt)("inlineCode",{parentName:"p"},"10token"),", or else the node will halt on startup."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml"},' # The minimum gas prices a validator is willing to accept for processing a\n # transaction. A transaction\'s fees must meet the minimum of any denomination\n # specified in this config (e.g. 0.25token1;0.0001token2).\n minimum-gas-prices = "0apoint"\n')),(0,i.kt)("h3",{id:"pruning-of-state"},"Pruning of State"),(0,i.kt)("p",null,"There are four strategies for pruning state. These strategies apply only to state and do not apply to block storage.\nTo set pruning, adjust the ",(0,i.kt)("inlineCode",{parentName:"p"},"pruning")," parameter in the ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.pointd/config/app.toml")," file.\nThe following pruning state settings are available:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"everything"),": Prune all saved states other than the current state."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"nothing"),": Save all states and delete nothing."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"default"),": Save the last 100 states and the state of every 10,000th block."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"custom"),": Specify pruning settings with the ",(0,i.kt)("inlineCode",{parentName:"li"},"pruning-keep-recent"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"pruning-keep-every"),", and ",(0,i.kt)("inlineCode",{parentName:"li"},"pruning-interval")," parameters.")),(0,i.kt)("p",null,"By default, every node is in ",(0,i.kt)("inlineCode",{parentName:"p"},"default")," mode which is the recommended setting for most environments.\nIf you would like to change your nodes pruning strategy then you must do so when the node is initialized. Passing a flag when starting ",(0,i.kt)("inlineCode",{parentName:"p"},"pointd")," will always override settings in the ",(0,i.kt)("inlineCode",{parentName:"p"},"app.toml")," file, if you would like to change your node to the ",(0,i.kt)("inlineCode",{parentName:"p"},"everything")," mode then you can pass the ",(0,i.kt)("inlineCode",{parentName:"p"},"---pruning everything")," flag when you call ",(0,i.kt)("inlineCode",{parentName:"p"},"pointd start"),"."),(0,i.kt)("admonition",{type:"warning"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("strong",{parentName:"p"},"IMPORTANT"),":\nWhen you are pruning state you will not be able to query the heights that are not in your store.")),(0,i.kt)("h3",{id:"client-configuration"},"Client configuration"),(0,i.kt)("p",null,"We can view the default client config setting by using ",(0,i.kt)("inlineCode",{parentName:"p"},"pointd config")," command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'pointd config\n{\n "chain-id": "",\n "keyring-backend": "os",\n "output": "text",\n "node": "tcp://localhost:26657",\n "broadcast-mode": "sync"\n}\n')),(0,i.kt)("p",null,"We can make changes to the default settings upon our choices, so it allows users to set the configuration beforehand all at once, so it would be ready with the same config afterward."),(0,i.kt)("p",null,"For example, the chain identifier can be changed to ",(0,i.kt)("inlineCode",{parentName:"p"},"point_10687-1")," from a blank name by using:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'pointd config "chain-id" point_10687-1\npointd config\n{\n "chain-id": "point_10687-1",\n "keyring-backend": "os",\n "output": "text",\n "node": "tcp://localhost:26657",\n "broadcast-mode": "sync"\n}\n')),(0,i.kt)("p",null,"Other values can be changed in the same way."),(0,i.kt)("p",null,"Alternatively, we can directly make the changes to the config values in one place at client.toml. It is under the path of ",(0,i.kt)("inlineCode",{parentName:"p"},".pointd/config/client.toml")," in the folder where we installed pointd:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'############################################################################\n### Client Configuration ###\n\n############################################################################\n\n# The network chain ID\n\nchain-id = "point_10687-1"\n\n# The keyring\'s backend, where the keys are stored (os|file|kwallet|pass|test|memory)\n\nkeyring-backend = "os"\n\n# CLI output format (text|json)\n\noutput = "number"\n\n# <host>:<port> to Tendermint RPC interface for this chain\n\nnode = "tcp://localhost:26657"\n\n# Transaction broadcasting mode (sync|async|block)\n\nbroadcast-mode = "sync"\n')),(0,i.kt)("p",null,"After the necessary changes are made in the ",(0,i.kt)("inlineCode",{parentName:"p"},"client.toml"),", then save. For example, if we directly change the chain-id from ",(0,i.kt)("inlineCode",{parentName:"p"},"point_10731-1")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"point_10687-1"),", and output to number, it would change instantly as shown below."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'pointd config\n{\n "chain-id": "point_10687-1",\n "keyring-backend": "os",\n "output": "number",\n "node": "tcp://localhost:26657",\n "broadcast-mode": "sync"\n}\n')),(0,i.kt)("h3",{id:"options"},"Options"),(0,i.kt)("p",null,"A list of commonly used flags of ",(0,i.kt)("inlineCode",{parentName:"p"},"pointd")," is listed below:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Option"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default Value"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"--chain-id")),(0,i.kt)("td",{parentName:"tr",align:null},"Full Chain ID"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},'""'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"--home")),(0,i.kt)("td",{parentName:"tr",align:null},"Directory for config and data"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"~/.pointd"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"--keyring-backend")),(0,i.kt)("td",{parentName:"tr",align:null},"Select keyring's backend"),(0,i.kt)("td",{parentName:"tr",align:null},'`{"os"'),(0,i.kt)("td",{parentName:"tr",align:null},'"file"')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"--output")),(0,i.kt)("td",{parentName:"tr",align:null},"Output format"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:null},'"text"')))),(0,i.kt)("h2",{id:"command-list"},"Command list"),(0,i.kt)("p",null,"A list of commonly used ",(0,i.kt)("inlineCode",{parentName:"p"},"pointd")," commands. You can obtain the full list by using the ",(0,i.kt)("inlineCode",{parentName:"p"},"pointd -h")," command."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Command"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Subcommands (example)"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"keys")),(0,i.kt)("td",{parentName:"tr",align:null},"Keys management"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"list"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"show"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"add"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"add  --recover"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"delete"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"tx")),(0,i.kt)("td",{parentName:"tr",align:null},"Transactions subcommands"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"bank send"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"ibc-transfer transfer"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"distribution withdraw-all-rewards"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"query")),(0,i.kt)("td",{parentName:"tr",align:null},"Query subcommands"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"bank balance"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"staking validators"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"gov proposals"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"tendermint")),(0,i.kt)("td",{parentName:"tr",align:null},"Tendermint subcommands"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"show-address"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"show-node-id"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"version"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"config")),(0,i.kt)("td",{parentName:"tr",align:null},"Client configuration"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"init")),(0,i.kt)("td",{parentName:"tr",align:null},"Initialize full node"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"start")),(0,i.kt)("td",{parentName:"tr",align:null},"Run full node"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"version")),(0,i.kt)("td",{parentName:"tr",align:null},"Point Chain version"),(0,i.kt)("td",{parentName:"tr",align:null})))))}m.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkpointnetwork_github_io=self.webpackChunkpointnetwork_github_io||[]).push([[6127],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=l(n),k=r,u=c["".concat(p,".").concat(k)]||c[k]||m[k]||i;return n?a.createElement(u,o(o({ref:t},d),{},{components:n})):a.createElement(u,o({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=c;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5859:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var a=n(7462),r=(n(7294),n(3905));const i={title:"Keyring",sidebar_label:"Keyring"},o="Keyring",s={unversionedId:"point_chain/users/keys/keyring",id:"point_chain/users/keys/keyring",title:"Keyring",description:"Create, import, export and delete keys using the CLI keyring",source:"@site/docs/point_chain/users/keys/keyring.md",sourceDirName:"point_chain/users/keys",slug:"/point_chain/users/keys/keyring",permalink:"/docs/point_chain/users/keys/keyring",draft:!1,editUrl:"https://github.com/pointnetwork/pointnetwork.github.io/edit/main/website/docs/point_chain/users/keys/keyring.md",tags:[],version:"current",lastUpdatedBy:"Iury V",lastUpdatedAt:1666012974,formattedLastUpdatedAt:"Oct 17, 2022",frontMatter:{title:"Keyring",sidebar_label:"Keyring"},sidebar:"pnSidebar",previous:{title:"Ledger",permalink:"/docs/point_chain/users/wallets/ledger"},next:{title:"Multisig",permalink:"/docs/point_chain/users/keys/multisig"}},p={},l=[{value:"Add keys",id:"add-keys",level:2},{value:"Keyring Backends",id:"keyring-backends",level:2},{value:"OS",id:"os",level:3},{value:"File",id:"file",level:3},{value:"Password Store",id:"password-store",level:3},{value:"KDE Wallet Manager",id:"kde-wallet-manager",level:3},{value:"Testing",id:"testing",level:3},{value:"In Memory",id:"in-memory",level:3}],d={toc:l};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"keyring"},"Keyring"),(0,r.kt)("p",null,"Create, import, export and delete keys using the CLI keyring"),(0,r.kt)("p",null,"The keyring holds the private/public keypairs used to interact with the node. For instance, a validator key needs to be set up before running the node, so that blocks can be correctly signed. The private key can be stored in different locations, called ",(0,r.kt)("a",{parentName:"p",href:"#keyring-backends"},'"backends"'),", such as a file or the operating system's own key storage."),(0,r.kt)("h2",{id:"add-keys"},"Add keys"),(0,r.kt)("p",null,"You can use the following commands for help with the ",(0,r.kt)("inlineCode",{parentName:"p"},"keys")," command and for more information about a particular subcommand, respectively:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pointd keys\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pointd keys [command] --help\n")),(0,r.kt)("p",null,"To create a new key in the keyring, run the ",(0,r.kt)("inlineCode",{parentName:"p"},"add")," subcommand with a ",(0,r.kt)("inlineCode",{parentName:"p"},"<key_name>")," argument. You will have to provide a password for the newly generated key. This key will be used in the next section."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pointd keys add mykey\n\n# Put the generated address in a variable for later use.\nMY_VALIDATOR_ADDRESS=$(pointd keys show mykey -a)\n")),(0,r.kt)("p",null,"This command generates a new 24-word mnemonic phrase, persists it to the relevant backend, and outputs information about the keypair. If this keypair will be used to hold value-bearing tokens, be sure to write down the mnemonic phrase somewhere safe!"),(0,r.kt)("p",null,"By default, the keyring generates a ",(0,r.kt)("inlineCode",{parentName:"p"},"eth_secp256k1")," key. The keyring also supports ",(0,r.kt)("inlineCode",{parentName:"p"},"ed25519")," keys, which may be created by passing the ",(0,r.kt)("inlineCode",{parentName:"p"},"--algo")," flag. A keyring can of course hold both types of keys simultaneously."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"Note"),": The Ethereum address associated with a public key can be derived by taking the full Ethereum public key of type ",(0,r.kt)("inlineCode",{parentName:"p"},"eth_secp256k1"),", computing the ",(0,r.kt)("inlineCode",{parentName:"p"},"Keccak-256")," hash, and truncating the first twelve bytes.")),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"NOTE"),": Cosmos ",(0,r.kt)("inlineCode",{parentName:"p"},"secp256k1")," keys are not supported on Point Chain due to compatibility issues with Ethereum transactions.")),(0,r.kt)("h2",{id:"keyring-backends"},"Keyring Backends"),(0,r.kt)("h3",{id:"os"},"OS"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"os"))," is the default option since operating system's default credentials managers are\ndesigned to meet users' most common needs and provide them with a comfortable\nexperience without compromising on security.")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"os")," backend relies on operating system-specific defaults to handle key storage\nsecurely. Typically, an operating system's credential sub-system handles password prompts,\nprivate keys storage, and user sessions according to the user's password policies. Here\nis a list of the most popular operating systems and their respective passwords manager:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"macOS (since Mac OS 8.6): ",(0,r.kt)("a",{parentName:"li",href:"https://support.apple.com/en-gb/guide/keychain-access/welcome/mac"},"Keychain")),(0,r.kt)("li",{parentName:"ul"},"Windows: ",(0,r.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/windows/win32/secauthn/credentials-management"},"Credentials Management API")),(0,r.kt)("li",{parentName:"ul"},"GNU/Linux:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://gitlab.gnome.org/GNOME/libsecret"},"libsecret")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://api.kde.org/frameworks/kwallet/html/index.html"},"kwallet"))))),(0,r.kt)("p",null,"GNU/Linux distributions that use GNOME as default desktop environment typically come with\n",(0,r.kt)("a",{parentName:"p",href:"https://wiki.gnome.org/Apps/Seahorse"},"Seahorse"),". Users of KDE based distributions are\ncommonly provided with ",(0,r.kt)("a",{parentName:"p",href:"https://userbase.kde.org/KDE_Wallet_Manager"},"KDE Wallet Manager"),".\nWhilst the former is in fact a ",(0,r.kt)("inlineCode",{parentName:"p"},"libsecret")," convenient frontend, the latter is a ",(0,r.kt)("inlineCode",{parentName:"p"},"kwallet"),"\nclient."),(0,r.kt)("p",null,"The recommended backends for headless environments are ",(0,r.kt)("inlineCode",{parentName:"p"},"file")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"pass"),"."),(0,r.kt)("h3",{id:"file"},"File"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"file")," stores the keyring encrypted within the app's configuration directory. This\nkeyring will request a password each time it is accessed, which may occur multiple\ntimes in a single command resulting in repeated password prompts. If using bash scripts\nto execute commands using the ",(0,r.kt)("inlineCode",{parentName:"p"},"file")," option you may want to utilize the following format\nfor multiple prompts:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# assuming that KEYPASSWD is set in the environment\nyes $KEYPASSWD | pointd keys add me\nyes $KEYPASSWD | pointd keys show me\n# start pointd with keyring-backend flag\npointd --keyring-backend=file start\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"The first time you add a key to an empty keyring, you will be prompted to type the password twice.")),(0,r.kt)("h3",{id:"password-store"},"Password Store"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"pass")," backend uses the ",(0,r.kt)("a",{parentName:"p",href:"https://www.passwordstore.org/"},"pass")," utility to manage on-disk\nencryption of keys' sensitive data and metadata. Keys are stored inside ",(0,r.kt)("inlineCode",{parentName:"p"},"gpg")," encrypted files\nwithin app-specific directories. ",(0,r.kt)("inlineCode",{parentName:"p"},"pass")," is available for the most popular UNIX\noperating systems as well as GNU/Linux distributions. Please refer to its manual page for\ninformation on how to download and install it."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"pass"))," uses ",(0,r.kt)("a",{parentName:"p",href:"https://gnupg.org/"},"GnuPG")," for encryption. ",(0,r.kt)("inlineCode",{parentName:"p"},"gpg")," automatically invokes the ",(0,r.kt)("inlineCode",{parentName:"p"},"gpg-agent"),"\ndaemon upon execution, which handles the caching of GnuPG credentials. Please refer to ",(0,r.kt)("inlineCode",{parentName:"p"},"gpg-agent"),"\nman page for more information on how to configure cache parameters such as credentials TTL and\npassphrase expiration.")),(0,r.kt)("p",null,"The password store must be set up prior to first use:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"pass init <GPG_KEY_ID>\n")),(0,r.kt)("p",null,"Replace ",(0,r.kt)("inlineCode",{parentName:"p"},"<GPG_KEY_ID>")," with your GPG key ID. You can use your personal GPG key or an alternative\none you may want to use specifically to encrypt the password store."),(0,r.kt)("h3",{id:"kde-wallet-manager"},"KDE Wallet Manager"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"kwallet")," backend uses ",(0,r.kt)("inlineCode",{parentName:"p"},"KDE Wallet Manager"),", which comes installed by default on the\nGNU/Linux distributions that ships KDE as default desktop environment. Please refer to\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.kde.org/stable5/en/kwalletmanager/kwallet5/"},"KWallet Handbook")," for more\ninformation."),(0,r.kt)("h3",{id:"testing"},"Testing"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"test")," backend is a password-less variation of the ",(0,r.kt)("inlineCode",{parentName:"p"},"file")," backend. Keys are stored\n",(0,r.kt)("strong",{parentName:"p"},"unencrypted")," on disk. This keyring is provided for ",(0,r.kt)("u",null,"testing purposes only"),". Use at your own risk!"),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"\ud83d\udea8 ",(0,r.kt)("strong",{parentName:"p"},"DANGER"),": ",(0,r.kt)("u",null,"Never")," create your mainnet validator keys using a ",(0,r.kt)("inlineCode",{parentName:"p"},"test")," keying backend. Doing so might result in a loss of funds by making your funds remotely accessible via the ",(0,r.kt)("inlineCode",{parentName:"p"},"eth_sendTransaction")," JSON-RPC endpoint."),(0,r.kt)("p",{parentName:"admonition"},"Ref: ",(0,r.kt)("a",{parentName:"p",href:"https://blog.ethereum.org/2015/08/29/security-alert-insecurely-configured-geth-can-make-funds-remotely-accessible/"},"Security Advisory: Insecurely configured geth can make funds remotely accessible"))),(0,r.kt)("h3",{id:"in-memory"},"In Memory"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"memory")," backend stores keys in memory. The keys are immediately deleted after the program has exited."),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"IMPORTANT"),": Provided for testing purposes only. The ",(0,r.kt)("inlineCode",{parentName:"p"},"memory")," backend is ",(0,r.kt)("strong",{parentName:"p"},"not")," recommended for use in production environments. Use at your own risk!")))}m.isMDXComponent=!0}}]);
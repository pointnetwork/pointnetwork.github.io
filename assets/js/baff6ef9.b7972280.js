"use strict";(self.webpackChunkpointnetwork_github_io=self.webpackChunkpointnetwork_github_io||[]).push([[2208],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=l(n),u=a,d=m["".concat(s,".").concat(u)]||m[u]||y[u]||o;return n?r.createElement(d,p(p({ref:t},c),{},{components:n})):r.createElement(d,p({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,p=new Array(o);p[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,p[1]=i;for(var l=2;l<o;l++)p[l]=n[l];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1820:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>y,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={title:"Backup",sidebar_label:"Backup"},p="Backup",i={unversionedId:"point_chain/users/wallets/backup",id:"point_chain/users/wallets/backup",title:"Backup",description:"Learn how to backup your wallet's mnemonic and private key.",source:"@site/docs/point_chain/users/wallets/backup.md",sourceDirName:"point_chain/users/wallets",slug:"/point_chain/users/wallets/backup",permalink:"/docs/point_chain/users/wallets/backup",draft:!1,editUrl:"https://github.com/pointnetwork/pointnetwork.github.io/edit/main/website/docs/point_chain/users/wallets/backup.md",tags:[],version:"current",lastUpdatedBy:"Darren Jensen",lastUpdatedAt:1665224898,formattedLastUpdatedAt:"Oct 8, 2022",frontMatter:{title:"Backup",sidebar_label:"Backup"},sidebar:"pnSidebar",previous:{title:"Metamask",permalink:"/docs/point_chain/users/wallets/metamask"},next:{title:"Keplr",permalink:"/docs/point_chain/users/wallets/keplr"}},s={},l=[{value:"Mnemonics",id:"mnemonics",level:2},{value:"Export Key",id:"export-key",level:2},{value:"Tendermint-Formatted Private Keys",id:"tendermint-formatted-private-keys",level:3},{value:"Ethereum-Formatted Private Keys",id:"ethereum-formatted-private-keys",level:3},{value:"Import Key",id:"import-key",level:2},{value:"Tendermint-Formatted Private Keys",id:"tendermint-formatted-private-keys-1",level:3},{value:"Ethereum-Formatted Private Keys",id:"ethereum-formatted-private-keys-1",level:3},{value:"Verification",id:"verification",level:3}],c={toc:l};function y(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"backup"},"Backup"),(0,a.kt)("p",null,"Learn how to backup your wallet's mnemonic and private key."),(0,a.kt)("h2",{id:"mnemonics"},"Mnemonics"),(0,a.kt)("p",null,"When you create a new key, you'll recieve a mnemonic phrase that can be used to restore that key. Backup the mnemonic phrase:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'pointd keys add mykey\n{\n  "name": "mykey",\n  "type": "local",\n  "address": "point1n253dl2tgyhxjm592p580c38r4dn8023ctv28d",\n  "pubkey": \'{"@type":"/ethermint.crypto.v1.ethsecp256k1.PubKey","key":"ArJhve4v5HkLm+F7ViASU/rAGx7YrwU4+XKV2MNJt+Cq"}\',\n  "mnemonic": ""\n}\n\n**Important** write this mnemonic phrase in a safe place.\nIt is the only way to recover your account if you ever forget your password.\n\n# <24 word mnemonic phrase>\n')),(0,a.kt)("p",null,"To restore the key:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'$ pointd keys add mykey-restored --recover\n> Enter your bip39 mnemonic\nbanner genuine height east ghost oak toward reflect asset marble else explain foster car nest make van divide twice culture announce shuffle net peanut\n{\n  "name": "mykey-restored",\n  "type": "local",\n  "address": "point1n253dl2tgyhxjm592p580c38r4dn8023ctv28d",\n  "pubkey": \'{"@type":"/ethermint.crypto.v1.ethsecp256k1.PubKey","key":"ArJhve4v5HkLm+F7ViASU/rAGx7YrwU4+XKV2MNJt+Cq"}\'\n}\n')),(0,a.kt)("h2",{id:"export-key"},"Export Key"),(0,a.kt)("h3",{id:"tendermint-formatted-private-keys"},"Tendermint-Formatted Private Keys"),(0,a.kt)("p",null,"To backup this type of key without the mnemonic phrase, do the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'pointd keys export mykey\nEnter passphrase to decrypt your key:\nEnter passphrase to encrypt the exported key:\n-----BEGIN TENDERMINT PRIVATE KEY-----\nkdf: bcrypt\nsalt: 14559BB13D881A86E0F4D3872B8B2C82\ntype: secp256k1\n\n# <Tendermint private key>\n-----END TENDERMINT PRIVATE KEY-----\n\n$ echo "\\\n-----BEGIN TENDERMINT PRIVATE KEY-----\nkdf: bcrypt\nsalt: 14559BB13D881A86E0F4D3872B8B2C82\ntype: secp256k1\n\n# <Tendermint private key>\n-----END TENDERMINT PRIVATE KEY-----" > mykey.export\n')),(0,a.kt)("h3",{id:"ethereum-formatted-private-keys"},"Ethereum-Formatted Private Keys"),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("strong",{parentName:"p"},"Note"),": These types of keys are MetaMask-compatible.")),(0,a.kt)("p",null,"To backup this type of key without the mnemonic phrase, do the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pointd keys unsafe-export-eth-key mykey > mykey.export\n**WARNING** this is an unsafe way to export your unencrypted private key, are you sure? [y/N]: y\nEnter keyring passphrase:\n")),(0,a.kt)("h2",{id:"import-key"},"Import Key"),(0,a.kt)("h3",{id:"tendermint-formatted-private-keys-1"},"Tendermint-Formatted Private Keys"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ pointd keys import mykey-imported ./mykey.export\nEnter passphrase to decrypt your key:\n")),(0,a.kt)("h3",{id:"ethereum-formatted-private-keys-1"},"Ethereum-Formatted Private Keys"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ pointd keys unsafe-import-eth-key mykey-imported ./mykey.export\nEnter passphrase to encrypt your key:\n")),(0,a.kt)("h3",{id:"verification"},"Verification"),(0,a.kt)("p",null,"Verify that your key has been restored using the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'$ pointd keys list\n[\n  {\n    "name": "mykey-imported",\n    "type": "local",\n    "address": "point1n253dl2tgyhxjm592p580c38r4dn8023ctv28d",\n    "pubkey": \'{"@type":"/ethermint.crypto.v1.ethsecp256k1.PubKey","key":"ArJhve4v5HkLm+F7ViASU/rAGx7YrwU4+XKV2MNJt+Cq"}\'\n  },\n  {\n    "name": "mykey-restored",\n    "type": "local",\n    "address": "point1n253dl2tgyhxjm592p580c38r4dn8023ctv28d",\n    "pubkey": \'{"@type":"/ethermint.crypto.v1.ethsecp256k1.PubKey","key":"ArJhve4v5HkLm+F7ViASU/rAGx7YrwU4+XKV2MNJt+Cq"}\'\n  },\n  {\n    "name": "mykey",\n    "type": "local",\n    "address": "point1n253dl2tgyhxjm592p580c38r4dn8023ctv28d",\n    "pubkey": \'{"@type":"/ethermint.crypto.v1.ethsecp256k1.PubKey","key":"ArJhve4v5HkLm+F7ViASU/rAGx7YrwU4+XKV2MNJt+Cq"}\'\n  }\n]\n')))}y.isMDXComponent=!0}}]);
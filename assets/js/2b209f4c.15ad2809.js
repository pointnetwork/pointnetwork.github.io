"use strict";(self.webpackChunkpointnetwork_github_io=self.webpackChunkpointnetwork_github_io||[]).push([[4804],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>h});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),c=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},s=function(e){var r=c(e.components);return n.createElement(l.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},y=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),y=c(t),h=a,d=y["".concat(l,".").concat(h)]||y[h]||u[h]||o;return t?n.createElement(d,i(i({ref:r},s),{},{components:t})):n.createElement(d,i({ref:r},s))}));function h(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=y;var p={};for(var l in r)hasOwnProperty.call(r,l)&&(p[l]=r[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}y.displayName="MDXCreateElement"},5925:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var n=t(7462),a=(t(7294),t(3905));const o={id:"learn-cryptography",title:"Cryptography Explainer",sidebar_label:"Cryptography Explainer",description:"An overview of the cryptographic functions used in Point Network",slug:"../learn-cryptography"},i=void 0,p={unversionedId:"learn/learn-cryptography",id:"learn/learn-cryptography",title:"Cryptography Explainer",description:"An overview of the cryptographic functions used in Point Network",source:"@site/docs/learn/learn-cryptography.md",sourceDirName:"learn",slug:"/learn-cryptography",permalink:"/docs/learn-cryptography",draft:!1,editUrl:"https://github.com/pointnetwork/pointnetwork.github.io/edit/main/website/docs/learn/learn-cryptography.md",tags:[],version:"current",lastUpdatedBy:"Darren Jensen",lastUpdatedAt:1665224898,formattedLastUpdatedAt:"Oct 8, 2022",frontMatter:{id:"learn-cryptography",title:"Cryptography Explainer",sidebar_label:"Cryptography Explainer",description:"An overview of the cryptographic functions used in Point Network",slug:"../learn-cryptography"},sidebar:"pnSidebar",previous:{title:"Layer 2 Payments",permalink:"/docs/learn-layer2-payments"},next:{title:"Video Tutorials",permalink:"/docs/learn-video-tutorials"}},l={},c=[{value:"Hashing Algorithm",id:"hashing-algorithm",level:2}],s={toc:c};function u(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This is a high-level overview of the cryptography used in Point Network. It assumes that you have some\nknowledge about cryptographic primitives that are generally used in blockchains such as hashes,\nelliptic curve cryptography (ECC), and public-private keypairs."),(0,a.kt)("h2",{id:"hashing-algorithm"},"Hashing Algorithm"),(0,a.kt)("p",null,"The hashing algorithm used in Point Network is ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/SHA-3"},"Keccak256"),". ",(0,a.kt)("inlineCode",{parentName:"p"},"Keccak256")," is considered to be a very fast cryptographic hash function that is also used in the Ethereum EVM."))}u.isMDXComponent=!0}}]);
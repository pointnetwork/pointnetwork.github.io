"use strict";(self.webpackChunkpointnetwork_github_io=self.webpackChunkpointnetwork_github_io||[]).push([[87],{3905:(e,t,o)=>{o.d(t,{Zo:()=>u,kt:()=>m});var n=o(7294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function p(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?p(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):p(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},p=Object.keys(e);for(n=0;n<p.length;n++)o=p[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)o=p[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var l=n.createContext({}),d=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):r(r({},t),e)),o},u=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,p=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=d(o),m=a,y=c["".concat(l,".").concat(m)]||c[m]||s[m]||p;return o?n.createElement(y,r(r({ref:t},u),{},{components:o})):n.createElement(y,r({ref:t},u))}));function m(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var p=o.length,r=new Array(p);r[0]=c;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,r[1]=i;for(var d=2;d<p;d++)r[d]=o[d];return n.createElement.apply(null,r)}return n.createElement.apply(null,o)}c.displayName="MDXCreateElement"},4640:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>s,frontMatter:()=>p,metadata:()=>i,toc:()=>d});var n=o(7462),a=(o(7294),o(3905));const p={id:"build-zapp-developer-guide",title:"Point Network dapp Developers Guide",sidebar_label:"Point Network dapp Developers Guide",slug:"../build-zapp-developer-guide"},r=void 0,i={unversionedId:"build/build-zapp-developer-guide",id:"build/build-zapp-developer-guide",title:"Point Network dapp Developers Guide",description:"Welcome to the Point Network dapp Developers Guide!",source:"@site/docs/build/build-zapp-developer-guide.md",sourceDirName:"build",slug:"/build-zapp-developer-guide",permalink:"/docs/build-zapp-developer-guide",draft:!1,editUrl:"https://github.com/pointnetwork/pointnetwork.github.io/edit/main/website/docs/build/build-zapp-developer-guide.md",tags:[],version:"current",lastUpdatedBy:"Darren Jensen",lastUpdatedAt:1665298455,formattedLastUpdatedAt:"Oct 9, 2022",frontMatter:{id:"build-zapp-developer-guide",title:"Point Network dapp Developers Guide",sidebar_label:"Point Network dapp Developers Guide",slug:"../build-zapp-developer-guide"},sidebar:"pnSidebar",previous:{title:"Create a Dev Point Network Profile in Firefox",permalink:"/docs/build-create-a-dev-point-network-profile-in-firefox"},next:{title:"Deploy dApp to Point Network",permalink:"/docs/build-deploy-zapp"}},l={},d=[{value:"Overview",id:"overview",level:2},{value:"Anatomy of a dapp",id:"anatomy-of-a-dapp",level:2},{value:"Procedures for developing a dapp",id:"procedures-for-developing-a-dapp",level:2},{value:"Deploy your dapp to YNet",id:"deploy-your-dapp-to-ynet",level:2},{value:"Continue Developing",id:"continue-developing",level:2},{value:"Upgradable dapps",id:"upgradable-dapps",level:2}],u={toc:d};function s(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Welcome to the Point Network dapp Developers Guide!"),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"dApps are decentralized applications running on Point Network."),(0,a.kt)("p",null,"While Point Network does support running EVM based Dapps directly on the network, its also possible to build brand new dapps using our SDK (called ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/pointnetwork/pointsdk"},"Point SDK"),"). "),(0,a.kt)("p",null,"Its highly recommended to use the Point SDK to build new dapps since this SDK automatically proxies connections to the Point Node making development of new dapps very straightforward."),(0,a.kt)("h2",{id:"anatomy-of-a-dapp"},"Anatomy of a dapp"),(0,a.kt)("p",null,"A dapp is made up of the following components at a minimum:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"A ",(0,a.kt)("inlineCode",{parentName:"li"},"point.deploy.json")," file which is a deployment manifest for your dapp. You can read more about this file in ",(0,a.kt)("a",{parentName:"li",href:"/docs/build-point-deploy-json-file-explained"},"this article"),"."),(0,a.kt)("li",{parentName:"ol"},"A ",(0,a.kt)("inlineCode",{parentName:"li"},"routes.json")," file which defines your dapps routes. You can read more about the Routes file in ",(0,a.kt)("a",{parentName:"li",href:"/docs/build-routes-json-file-explained"},"this article")),(0,a.kt)("li",{parentName:"ol"},"A static website containing the frontend code of your dapp. Typically this would be a React JS application but you can use any frontend framework."),(0,a.kt)("li",{parentName:"ol"},"One or more Solidity Smart Contracts to be deployed along with your dapp to act as a distributed backend data storage.")),(0,a.kt)("h2",{id:"procedures-for-developing-a-dapp"},"Procedures for developing a dapp"),(0,a.kt)("p",null,"You would take the following steps to develop, test and deploy your dapp onto Point Network."),(0,a.kt)("p",null,"Once you have a great idea for a new decentralized application that you want to deploy and share on Point Network you would:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Clone the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/pointnetwork/template.point"},"template.point")," dapp repo into a local folder:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"git clone https://github.com/pointnetwork/template.point.git mynewdapp.point\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Remove the ",(0,a.kt)("inlineCode",{parentName:"p"},".git")," folder so that you can initialize for your own Github repo later on if you wish: ",(0,a.kt)("inlineCode",{parentName:"p"},"rm -rf mynewdapp.point/.git"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Change directory into your new dapp folder and install the dependencies ",(0,a.kt)("inlineCode",{parentName:"p"},"npm i")," and build the React JS application ",(0,a.kt)("inlineCode",{parentName:"p"},"npm run build"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Modify the ",(0,a.kt)("inlineCode",{parentName:"p"},"point.deploy.json")," file to contain the following content (replace 'MyNewdapp' with your dapp Name):"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},'{\n    "version": 0.1,\n    "target": "mynewdapp.point",\n    "keyvalue": {},\n    "contracts": [\n      "MyNewdapp"\n    ]\n  }\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Modify the ",(0,a.kt)("inlineCode",{parentName:"p"},"Template.sol")," smart contract to contain the logic of your dapp. Make sure to rename the file to something appropriate like ",(0,a.kt)("inlineCode",{parentName:"p"},"MyNewdapp.sol")," as well.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Modify the React JS components to contain the logic of your dapp.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Deploy and test your dapp locally by following the instructions ",(0,a.kt)("a",{parentName:"p",href:"./build-zapp-dev-environment-direct-install"},"here"),"). In the development environment you can run the watch command for the front end ",(0,a.kt)("inlineCode",{parentName:"p"},"npm run watch")," so that as you make changes to any React JS components they are automatically built and you can simply refresh the Point Browser to see your latest changes. NOTE: if you need to make changes to your Smart Contract you will need to redeploy your dapp to see these changes."))),(0,a.kt)("h2",{id:"deploy-your-dapp-to-ynet"},"Deploy your dapp to YNet"),(0,a.kt)("p",null,"Step by step details on deploying your dapp to YNet are available ",(0,a.kt)("a",{parentName:"p",href:"./build-deploy-zapp"},"here"),"."),(0,a.kt)("h2",{id:"continue-developing"},"Continue Developing"),(0,a.kt)("p",null,"To continue to develop your dapp locally, simply stop the Point Node running that is connected to YNET and restart all your dev services as well as the Point Node running in the development environment as outlined ",(0,a.kt)("a",{parentName:"p",href:"./build-zapp-dev-environment-direct-install"},"here"),"."),(0,a.kt)("h2",{id:"upgradable-dapps"},"Upgradable dapps"),(0,a.kt)("p",null,"If you build a dapp ",(0,a.kt)("em",{parentName:"p"},"without")," using an upgradable smart contract pattern then each time you deploy the smart contract a ",(0,a.kt)("em",{parentName:"p"},"new instance")," of the smart contract will be deployed at a new address which will not contain the data of the previously deployed contract. If you intend to upgrade your dapp from time to time, then consider building your dapp as an ",(0,a.kt)("a",{parentName:"p",href:"./build-upgradable-zapps"},"Upgradable dapp"),"."))}s.isMDXComponent=!0}}]);
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1935],{3905:function(t,e,n){n.d(e,{Zo:function(){return c},kt:function(){return g}});var r=n(67294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var s=r.createContext({}),u=function(t){var e=r.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},c=function(t){var e=u(t.components);return r.createElement(s.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,i=t.mdxType,a=t.originalType,s=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),d=u(n),g=i,f=d["".concat(s,".").concat(g)]||d[g]||p[g]||a;return n?r.createElement(f,o(o({ref:e},c),{},{components:n})):r.createElement(f,o({ref:e},c))}));function g(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l.mdxType="string"==typeof t?t:i,o[1]=l;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},60159:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var r=n(83117),i=n(80102),a=(n(67294),n(3905)),o=["components"],l={id:"build-testing-guide",title:"Point Network Testing Guide",sidebar_label:"Testing Guide",slug:"../build-testing-guide"},s=void 0,u={unversionedId:"build/build-testing-guide",id:"build/build-testing-guide",title:"Point Network Testing Guide",description:"Point Network needs to test all levels of the application. This potentially means:",source:"@site/docs/build/build-testing-guide.md",sourceDirName:"build",slug:"/build-testing-guide",permalink:"/docs/build-testing-guide",editUrl:"https://github.com/pointnetwork/pointnetwork.github.io/edit/main/website/docs/build/build-testing-guide.md",tags:[],version:"current",lastUpdatedBy:"sergevar",lastUpdatedAt:1664017622,formattedLastUpdatedAt:"9/24/2022",frontMatter:{id:"build-testing-guide",title:"Point Network Testing Guide",sidebar_label:"Testing Guide",slug:"../build-testing-guide"},sidebar:"pnSidebar",previous:{title:"Upgrade the Identity contract",permalink:"/docs/build-upgrade-identity-contract"},next:{title:"Integration Initiation",permalink:"/docs/build-integration"}},c=[],p={toc:c};function d(t){var e=t.components,n=(0,i.Z)(t,o);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Point Network needs to test all levels of the application. This potentially means:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Unit Testing")," of functions and methods using ",(0,a.kt)("a",{parentName:"li",href:"https://jestjs.io/"},"Jest")," in the Node and ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/pointnetwork/pointsdk"},"Point SDK"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Use Factories")," for creating data in different schemas and contexts using ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/simonexmachina/factory-girl"},"Factory Girl"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Integration Testing")," of different components / modules and services."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Browser / Front End integration testing")," using ",(0,a.kt)("a",{parentName:"li",href:"https://nightwatchjs.org/"},"Nightwatch JS"),". This can be another form of integration testing for the example applications which ultimately test that the node is working properly for application functionality."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Smart Contract Tests")," using ",(0,a.kt)("a",{parentName:"li",href:"https://www.trufflesuite.com/docs/truffle/testing/testing-your-contracts"},"Truffle Testing Framework")," and ",(0,a.kt)("a",{parentName:"li",href:"https://docs.openzeppelin.com/learn/writing-automated-tests"},"Open Zeppelin Testing Framework"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Load testing")," using ",(0,a.kt)("a",{parentName:"li",href:"https://artillery.io"},"artillery.io"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Database testing")," making use of test seed data and using a ",(0,a.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/database-cleaner"},"database cleaner")," to reset the database between tests. Use Factory Girl for creating contextual based data for each test.")))}d.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkpointnetwork_github_io=self.webpackChunkpointnetwork_github_io||[]).push([[2941],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=l(n),u=i,h=m["".concat(p,".").concat(u)]||m[u]||c[u]||o;return n?a.createElement(h,r(r({ref:t},d),{},{components:n})):a.createElement(h,r({ref:t},d))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var l=2;l<o;l++)r[l]=n[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7970:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=n(7462),i=(n(7294),n(3905));const o={title:"Testnet",sidebar_label:"Testnet"},r="Join a Testnet",s={unversionedId:"point_chain/validators/testnet",id:"point_chain/validators/testnet",title:"Testnet",description:"This document outlines the steps to join an existing testnet",source:"@site/docs/point_chain/validators/testnet.md",sourceDirName:"point_chain/validators",slug:"/point_chain/validators/testnet",permalink:"/docs/point_chain/validators/testnet",draft:!1,editUrl:"https://github.com/pointnetwork/pointnetwork.github.io/edit/main/website/docs/point_chain/validators/testnet.md",tags:[],version:"current",lastUpdatedBy:"Darren Jensen",lastUpdatedAt:1665224220,formattedLastUpdatedAt:"Oct 8, 2022",frontMatter:{title:"Testnet",sidebar_label:"Testnet"},sidebar:"pnSidebar",previous:{title:"Join Mainnet",permalink:"/docs/point_chain/validators/mainnet"},next:{title:"Validator Security",permalink:"/docs/point_chain/validators/security/"}},p={},l=[{value:"Pick a Testnet",id:"pick-a-testnet",level:2},{value:"Install <code>pointd</code>",id:"install-pointd",level:2},{value:"Save Chain ID",id:"save-chain-id",level:3},{value:"Initialize Node",id:"initialize-node",level:2},{value:"Genesis &amp; Seeds",id:"genesis--seeds",level:2},{value:"Copy the Genesis File",id:"copy-the-genesis-file",level:3},{value:"Add Seed Nodes",id:"add-seed-nodes",level:3},{value:"Add Persistent Peers",id:"add-persistent-peers",level:3},{value:"Run a Testnet Validator",id:"run-a-testnet-validator",level:2},{value:"Start testnet",id:"start-testnet",level:2},{value:"Upgrading Your Node",id:"upgrading-your-node",level:2},{value:"Reset Data",id:"reset-data",level:3},{value:"Restart",id:"restart",level:3},{value:"Share your Peer",id:"share-your-peer",level:2}],d={toc:l};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"join-a-testnet"},"Join a Testnet"),(0,i.kt)("p",null,"This document outlines the steps to join an existing testnet"),(0,i.kt)("h2",{id:"pick-a-testnet"},"Pick a Testnet"),(0,i.kt)("p",null,"You specify the network you want to join by setting the ",(0,i.kt)("strong",{parentName:"p"},"genesis file")," and ",(0,i.kt)("strong",{parentName:"p"},"seeds"),". If you need more information about past networks, check our ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/pointnetwork/point-chain-config"},"networks repo"),"."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Testnet Chain ID"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Site"),(0,i.kt)("th",{parentName:"tr",align:null},"Status"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"point_10731-1")),(0,i.kt)("td",{parentName:"tr",align:null},"Uranus Testnet"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/pointnetwork/point-chain-config/tree/main/testnet-xNet-Uranus-1"},"Uranus")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Live"))))),(0,i.kt)("h2",{id:"install-pointd"},"Install ",(0,i.kt)("inlineCode",{parentName:"h2"},"pointd")),(0,i.kt)("p",null,"Follow the ",(0,i.kt)("a",{parentName:"p",href:"/docs/point_chain/validators/quickstart/installation"},"installation")," document to install the Point Chain binary ",(0,i.kt)("inlineCode",{parentName:"p"},"pointd"),"."),(0,i.kt)("admonition",{type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"Make sure you have the right version of ",(0,i.kt)("inlineCode",{parentName:"p"},"pointd")," installed.")),(0,i.kt)("h3",{id:"save-chain-id"},"Save Chain ID"),(0,i.kt)("p",null,"We recommend saving the testnet ",(0,i.kt)("inlineCode",{parentName:"p"},"chain-id")," into your ",(0,i.kt)("inlineCode",{parentName:"p"},"pointd"),"'s ",(0,i.kt)("inlineCode",{parentName:"p"},"client.toml"),". This will make it so you do not have to manually pass in the ",(0,i.kt)("inlineCode",{parentName:"p"},"chain-id")," flag for every CLI command."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"See the Official ",(0,i.kt)("a",{parentName:"p",href:"./../users/technical_concepts/chain_id"},"Chain IDs")," for reference.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pointd config chain-id point_10731-1\n")),(0,i.kt)("h2",{id:"initialize-node"},"Initialize Node"),(0,i.kt)("p",null,"We need to initialize the node to create all the necessary validator and node configuration files:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pointd init <your_custom_moniker> --chain-id point_10731-1\n")),(0,i.kt)("admonition",{type:"danger"},(0,i.kt)("p",{parentName:"admonition"},"Monikers can contain only ASCII characters. Using Unicode characters will render your node unreachable.")),(0,i.kt)("p",null,"By default, the ",(0,i.kt)("inlineCode",{parentName:"p"},"init")," command creates your ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.pointd")," (i.e ",(0,i.kt)("inlineCode",{parentName:"p"},"$HOME"),") directory with subfolders ",(0,i.kt)("inlineCode",{parentName:"p"},"config/")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"data/"),".\nIn the ",(0,i.kt)("inlineCode",{parentName:"p"},"config")," directory, the most important files for configuration are ",(0,i.kt)("inlineCode",{parentName:"p"},"app.toml")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"config.toml"),"."),(0,i.kt)("h2",{id:"genesis--seeds"},"Genesis & Seeds"),(0,i.kt)("h3",{id:"copy-the-genesis-file"},"Copy the Genesis File"),(0,i.kt)("p",null,"Check the ",(0,i.kt)("inlineCode",{parentName:"p"},"genesis.json")," file from the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/pointnetwork/point-chain-config/blob/main/testnet-xNet-Uranus-1/genesis.json"},(0,i.kt)("inlineCode",{parentName:"a"},"archive"))," and copy it over to the ",(0,i.kt)("inlineCode",{parentName:"p"},"config")," directory: ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.pointd/config/genesis.json"),". This is a genesis file with the chain-id and genesis accounts balances."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install -y unzip wget\nwget  -O ~/.pointd/config/genesis.json https://raw.githubusercontent.com/pointnetwork/point-chain-config/main/testnet-xNet-Uranus-1/genesis.json\n")),(0,i.kt)("p",null,"Then verify the correctness of the genesis configuration file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pointd validate-genesis\n")),(0,i.kt)("h3",{id:"add-seed-nodes"},"Add Seed Nodes"),(0,i.kt)("p",null,"Your node needs to know how to find ",(0,i.kt)("a",{parentName:"p",href:"https://docs.tendermint.com/master/tendermint-core/using-tendermint.html#peers"},"peers"),". You'll need to add healthy ",(0,i.kt)("a",{parentName:"p",href:"https://docs.tendermint.com/master/tendermint-core/using-tendermint.html#seed"},"seed nodes")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"$HOME/.pointd/config/config.toml"),". The ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/pointnetwork/point-chain-config"},(0,i.kt)("inlineCode",{parentName:"a"},"point-chaing-config"))," repo contains links to some seed nodes."),(0,i.kt)("p",null,"Edit the file located in ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.pointd/config/config.toml")," and the ",(0,i.kt)("inlineCode",{parentName:"p"},"seeds")," to the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'#######################################################\n###           P2P Configuration Options             ###\n#######################################################\n[p2p]\n\n# ...\n\n# Comma separated list of seed nodes to connect to\nseeds = "<node-id>@<ip>:<p2p port>"\n')),(0,i.kt)("p",null,"You can use the following code to get seeds from the repo and add it to your config:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'SEEDS=`curl -sL https://raw.githubusercontent.com/pointnetwork/point-chain-config/main/testnet-xNet-Uranus-1/seeds.txt | awk \'{print $1}\' | paste -s -d, -`\nsed -i.bak -e "s/^seeds =.*/seeds = \\"$SEEDS\\"/" ~/.pointd/config/config.toml\n')),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"For more information on seeds and peers, you can the Tendermint ",(0,i.kt)("a",{parentName:"p",href:"https://docs.tendermint.com/master/spec/p2p/peer.html"},"P2P documentation"),".")),(0,i.kt)("h3",{id:"add-persistent-peers"},"Add Persistent Peers"),(0,i.kt)("p",null,"We can set the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.tendermint.com/master/tendermint-core/using-tendermint.html#persistent-peer"},(0,i.kt)("inlineCode",{parentName:"a"},"persistent_peers"))," field in ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.pointd/config/config.toml")," to specify peers that your node will maintain persistent connections with."),(0,i.kt)("p",null,"A list of available persistent peers is also available in the ",(0,i.kt)("inlineCode",{parentName:"p"},"#find-peers")," channel in the ",(0,i.kt)("a",{parentName:"p",href:"https://discord.com/invite/DkH6zxCXWz"},"Point Chain Discord"),". You can get a random 10 entries from the ",(0,i.kt)("inlineCode",{parentName:"p"},"peers.txt")," file in the ",(0,i.kt)("inlineCode",{parentName:"p"},"PEERS")," variable by running the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"PEERS=`curl -sL https://raw.githubusercontent.com/pointnetwork/point-chain-config/main/testnet-xNet-Uranus-1/peers.txt | sort -R | head -n 10 | awk '{print $1}' | paste -s -d, -`\n")),(0,i.kt)("p",null,"Use ",(0,i.kt)("inlineCode",{parentName:"p"},"sed")," to include them into the configuration. You can also add them manually:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'sed -i.bak -e "s/^persistent_peers *=.*/persistent_peers = \\"$PEERS\\"/" ~/.pointd/config/config.toml\n')),(0,i.kt)("h2",{id:"run-a-testnet-validator"},"Run a Testnet Validator"),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"For more details on how to run your validator, follow ",(0,i.kt)("a",{parentName:"p",href:"/docs/point_chain/validators/setup/run_validator"},"these")," instructions.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'pointd tx staking create-validator \\\n  --amount=1000000000000apoint \\\n  --pubkey=$(pointd tendermint show-validator) \\\n  --moniker="PointWhale" \\\n  --chain-id=<chain_id> \\\n  --commission-rate="0.10" \\\n  --commission-max-rate="0.20" \\\n  --commission-max-change-rate="0.01" \\\n  --min-self-delegation="1" \\\n  --gas="auto" \\\n  --gas-prices="0.025apoint" \\\n  --from=<key_name>\n')),(0,i.kt)("h2",{id:"start-testnet"},"Start testnet"),(0,i.kt)("p",null,"The final step is to ",(0,i.kt)("a",{parentName:"p",href:"/docs/point_chain/validators/quickstart/run_node#start-node"},"start the nodes"),". Once enough voting power (+2/3) from the genesis validators is up-and-running, the testnet will start producing blocks."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pointd start\n")),(0,i.kt)("h2",{id:"upgrading-your-node"},"Upgrading Your Node"),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"These instructions are for full nodes that have ran on previous versions of and would like to upgrade to the latest testnet version.")),(0,i.kt)("h3",{id:"reset-data"},"Reset Data"),(0,i.kt)("admonition",{type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"If the version <new_version> you are upgrading to is not breaking from the previous one, you ",(0,i.kt)("strong",{parentName:"p"},"should not")," reset the data. If this is the case you can skip to ",(0,i.kt)("a",{parentName:"p",href:"#restart"},"Restart"))),(0,i.kt)("p",null,"First, remove the outdated files and reset the data."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"rm $HOME/.pointd/config/addrbook.json $HOME/.pointd/config/genesis.json\npointd tendermint unsafe-reset-all --home $HOME/.pointd\n")),(0,i.kt)("p",null,"Your node is now in a pristine state while keeping the original ",(0,i.kt)("inlineCode",{parentName:"p"},"priv_validator.json")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"config.toml"),". If you had any sentry nodes or full nodes setup before,\nyour node will still try to connect to them, but may fail if they haven't also\nbeen upgraded."),(0,i.kt)("admonition",{title:"Warning",type:"danger"},(0,i.kt)("p",{parentName:"admonition"},"Make sure that every node has a unique ",(0,i.kt)("inlineCode",{parentName:"p"},"priv_validator.json"),". Do not copy the ",(0,i.kt)("inlineCode",{parentName:"p"},"priv_validator.json")," from an old node to multiple new nodes. Running two nodes with the same ",(0,i.kt)("inlineCode",{parentName:"p"},"priv_validator.json")," will cause you to double sign.")),(0,i.kt)("h3",{id:"restart"},"Restart"),(0,i.kt)("p",null,"To restart your node, just type:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pointd start\n")),(0,i.kt)("h2",{id:"share-your-peer"},"Share your Peer"),(0,i.kt)("p",null,"You can share your peer to posting it in the ",(0,i.kt)("inlineCode",{parentName:"p"},"#find-peers")," channel in the ",(0,i.kt)("a",{parentName:"p",href:"https://discord.com/invite/DkH6zxCXWz"},"Point Discord"),"."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"To get your Node ID use"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pointd tendermint show-node-id\n"))))}c.isMDXComponent=!0}}]);
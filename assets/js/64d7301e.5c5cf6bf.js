"use strict";(self.webpackChunkpointnetwork_github_io=self.webpackChunkpointnetwork_github_io||[]).push([[9900],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=l(t),f=a,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||o;return t?r.createElement(m,i(i({ref:n},c),{},{components:t})):r.createElement(m,i({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var l=2;l<o;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3329:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var r=t(7462),a=(t(7294),t(3905));const o={},i=void 0,p={unversionedId:"point_chain/developers/json-rpc/running_server",id:"point_chain/developers/json-rpc/running_server",title:"running_server",description:"\x3c!--",source:"@site/docs/point_chain/developers/json-rpc/running_server.md",sourceDirName:"point_chain/developers/json-rpc",slug:"/point_chain/developers/json-rpc/running_server",permalink:"/docs/point_chain/developers/json-rpc/running_server",draft:!1,editUrl:"https://github.com/pointnetwork/pointnetwork.github.io/edit/main/website/docs/point_chain/developers/json-rpc/running_server.md",tags:[],version:"current",lastUpdatedBy:"Darren Jensen",lastUpdatedAt:1665224898,formattedLastUpdatedAt:"Oct 8, 2022",frontMatter:{}},s={},l=[{value:"Enable Server",id:"enable-server",level:2},{value:"Defining Namespaces",id:"defining-namespaces",level:2},{value:"Set a Gas Cap",id:"set-a-gas-cap",level:2},{value:"CORS",id:"cors",level:2}],c={toc:l};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"running-the-server"},"Running the Server"),(0,a.kt)("p",null,"Learn how to run and setup the JSON-RPC server on Point Chain."),(0,a.kt)("h2",{id:"enable-server"},"Enable Server"),(0,a.kt)("p",null,"To enable RPC server use the following flag (set to true by default)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pointd start --json-rpc.enable\n")),(0,a.kt)("h2",{id:"defining-namespaces"},"Defining Namespaces"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Eth"),",",(0,a.kt)("inlineCode",{parentName:"p"},"Net")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Web3")," ",(0,a.kt)("a",{parentName:"p",href:"/docs/point_chain/developers/json-rpc/namespaces"},"namespaces")," are enabled by default. In order to enable other namespaces use flag ",(0,a.kt)("inlineCode",{parentName:"p"},"--json-rpc.api"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pointd start --json-rpc.api eth,txpool,personal,net,debug,web3,miner\n")),(0,a.kt)("h2",{id:"set-a-gas-cap"},"Set a Gas Cap"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"eth_call")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"eth_estimateGas")," define a global gas cap over rpc for DoS protection. You can override the default gas cap value of 25,000,000 by passing a custom value when starting the node:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# set gas cap to 85M\npointd start --json-rpc.gas-cap 85000000000\n\n# set gas cap to infinite (=0)\npointd start --json-rpc.gas-cap 0\n")),(0,a.kt)("h2",{id:"cors"},"CORS"),(0,a.kt)("p",null,"If accessing the RPC from a browser, CORS will need to be enabled with the appropriate domain set. Otherwise, JavaScript calls are limit by the same-origin policy and requests will fail."),(0,a.kt)("p",null,"The CORS setting can be updated from the ",(0,a.kt)("inlineCode",{parentName:"p"},"app.toml")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},"###############################################################################\n###                           API Configuration                             ###\n###############################################################################\n\n[api]\n\n# ...\n\n# EnableUnsafeCORS defines if CORS should be enabled (unsafe - use it at your own risk).\nenabled-unsafe-cors = true # default false\n")))}u.isMDXComponent=!0}}]);
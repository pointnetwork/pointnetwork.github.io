"use strict";(self.webpackChunkpointnetwork_github_io=self.webpackChunkpointnetwork_github_io||[]).push([[2144],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return n?o.createElement(h,i(i({ref:t},s),{},{components:n})):o.createElement(h,i({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5520:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var o=n(7462),r=(n(7294),n(3905));const a={},i=void 0,c={unversionedId:"point_chain/developers/tools/remix",id:"point_chain/developers/tools/remix",title:"remix",description:"\x3c!--",source:"@site/docs/point_chain/developers/tools/remix.md",sourceDirName:"point_chain/developers/tools",slug:"/point_chain/developers/tools/remix",permalink:"/docs/point_chain/developers/tools/remix",draft:!1,editUrl:"https://github.com/pointnetwork/pointnetwork.github.io/edit/main/website/docs/point_chain/developers/tools/remix.md",tags:[],version:"current",lastUpdatedBy:"Darren Jensen",lastUpdatedAt:1665298455,formattedLastUpdatedAt:"Oct 9, 2022",frontMatter:{}},l={},p=[{value:"Connect to Remix",id:"connect-to-remix",level:2},{value:"Deploy and Interact",id:"deploy-and-interact",level:2}],s={toc:p};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,o.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"remix-deploying-a-smart-contract"},"Remix: Deploying a Smart Contract"),(0,r.kt)("p",null,"Learn how to deploy a simple Solidity-based smart contract to Point Chain using the Remix in-browser IDE"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://remix.ethereum.org/"},"Remix")," is an in-browser IDE for ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ethereum/solidity"},"Solidity")," smart contracts. In this guide, we will learn how to deploy a contract to a running Point Chain network through Remix and interact with it."),(0,r.kt)("h2",{id:"connect-to-remix"},"Connect to Remix"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"If you haven\u2019t already, follow the steps in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/point_chain/users/wallets/metamask"},"Metamask guide")," to import your Point Chain private key into Metamask. Start the Point Chain daemon and REST server.")),(0,r.kt)("p",null,"Go to ",(0,r.kt)("a",{parentName:"p",href:"http://remix.ethereum.org/"},"Remix"),". There are some contracts in the File Explorer. Replace these with the source code to ",(0,r.kt)("inlineCode",{parentName:"p"},"Counter.sol")," below. On the left-most bar, select the Solidity Compiler and compile the contract."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"pragma solidity >=0.7.0 <0.9.0;\n\ncontract Counter {\n  uint256 counter = 0;\n\n  function add() public {\n    counter++;\n  }\n\n  function subtract() public {\n    counter--;\n  }\n\n  function getCounter() public view returns (uint256) {\n    return counter;\n  }\n}\n")),(0,r.kt)("p",null,"Next, select the ",(0,r.kt)("inlineCode",{parentName:"p"},"Deploy and Run")," option. Select ",(0,r.kt)("inlineCode",{parentName:"p"},"Injected Web3")," as the ",(0,r.kt)("inlineCode",{parentName:"p"},"Environment"),". This will open a metamask popup for you to connect your Metamask to Remix. Select ",(0,r.kt)("inlineCode",{parentName:"p"},"Connect")," to confirm."),(0,r.kt)("p",null,"You should see your account show up in the left-hand panel."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"remix connected to point",src:n(3978).Z,width:"1870",height:"946"})),(0,r.kt)("h2",{id:"deploy-and-interact"},"Deploy and Interact"),(0,r.kt)("p",null,"Now that your account is connected, you are able to deploy the contract. Press the ",(0,r.kt)("inlineCode",{parentName:"p"},"Deploy")," button. A metamask pop-up will appear asking you to confirm. Confirm the transaction. You should see a log for the deployment transaction in the Point Chain daemon logs:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'I[2020-07-15|17:26:43.155] Added good transaction                       module=mempool tx=877A8E6600FA27EC2B2362719274314977B243671DC4E5F8796ED97FFC0CBE42 res="&{CheckTx:log:\\"[]\\" gas_wanted:121193 }" height=31 total=1\n')),(0,r.kt)("p",null,"Once the contract has been successfully deployed, you will see it show up in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Deployed Contracts")," section in the left-hand side, as well as a green check in the Remix console showing the transaction details."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"deployed contract through remix",src:n(3341).Z,width:"1875",height:"951"})),(0,r.kt)("p",null,"Now, you are able to interact with the contract through Remix. For ",(0,r.kt)("inlineCode",{parentName:"p"},"Counter.sol"),", click ",(0,r.kt)("inlineCode",{parentName:"p"},"add"),". This will open a Metamask pop-up asking you to confirm. Confirm the transaction. Then, click ",(0,r.kt)("inlineCode",{parentName:"p"},"getCounter")," to get the count, which should be ",(0,r.kt)("inlineCode",{parentName:"p"},"1"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"interacting with deployed contract through remix",src:n(5852).Z,width:"1872",height:"945"})))}u.isMDXComponent=!0},3978:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/remix_deploy-0fe26847c5eff7e6c3bf73d329c824be.png"},3341:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/remix_deployed-fe7c2427c97b5fb4d95c61c77c3eb0b1.png"},5852:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/remix_interact-dd3b10d3a25f801395a0796c53a381a1.png"}}]);